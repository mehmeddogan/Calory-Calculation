import cv2
import numpy as np
import tensorflow as tf
from tensorflow.keras.applications.mobilenet_v2 import MobileNetV2, preprocess_input
from tensorflow.keras.preprocessing import image
# Import cv2_imshow for displaying images in Colab
from google.colab.patches import cv2_imshow

# testing class for calory prediction 
food_calories = {
    'apple': 95,  
    'banana': 105, 
    'orange': 62, 
    'pizza': 285,  
    'burger': 354,  
    'cheeseburger':367,
}

# import the models
model = MobileNetV2(weights='imagenet')

def preprocess_image(img_path):
    """upload image."""
    img = cv2.imread(img_path)  # use img_path variable
    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)  # OpenCV BGR -> RGB
    img = cv2.resize(img, (224, 224))  # Expected size of the model
    img = np.expand_dims(img, axis=0)  # Add batch size
    img = preprocess_input(img)  # Preprocessing for the model
    return img

def predict_food(img_path):
    """Predict the food ve return calory value."""
    img = preprocess_image(img_path)
    predictions = model.predict(img)

    # Choose the max value of the prediction
    decoded_predictions = tf.keras.applications.mobilenet_v2.decode_predictions(predictions, top=1)[0]
    food_name = decoded_predictions[0][1]  # Guessed food name

    print(f"Predicted food {food_name}")

    #returning the value according to food name
    calories = food_calories.get(food_name.lower(), "Unknown food")

    return food_name, calories

# Calorie estimation with a sample image
image_path = 'burger1.jpg'  # The path of the testing image
food_name, calories = predict_food(image_path)
print(f"Caloric Value of Food: {calories} kcal")
# Upload and display image
img = cv2.imread("burger1.jpg")
cv2_imshow(img)  # Display on screen
